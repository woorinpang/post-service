server:
  port: 0 #random port

spring:
  application:
    name: post-service
  config:
    import:
      - optional:configserver:http://localhost:8888
      - monitoring.yml
      - logging.yml
      - core-domain.yml
      - client-user.yml

# 2시간(7,200,000), 1일(86,400,000) jwt token
token:
  access_expiration_time: 7200000
  refresh_expiration_time: 86400000
  secret-key: 'dGhpcy1pcy13b29yaW5wYW5nLXNlcnZpY2UtdGhpcy1pcy13b29yaW5wYW5nLXNlcnZpY2UtdGhpcy1pcy13b29yaW5wYW5nLXNlcnZpY2UtdGhpcy1pcy13b29yaW5wYW5nLXNlcnZpY2UtdGhpcy1pcy13b29yaW5wYW5nLXNlcnZpY2UtdGhpcy1pcy13b29yaW5wYW5nLXNlcnZpY2U='

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}} # random port 사용시 eureka server에 인스턴스가 각각 표시되지 않는다
    preferIpAddress: true # 서비스간 통신 시 hostname 보다 ip 를 우선
  client:
    register-with-eureka: true # eureka 서버에 등록
    fetch-registry: true # 외부 검색 가능
    service-url:
      defaultZone: http://admin:admin@${eureka.instance.hostname:localhost}:8761/eureka

apigateway:
  host: http://${apigateway.hostname:localhost}:${server.port}